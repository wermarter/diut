name: Deploy production

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-web-app:
    name: Build web-app
    runs-on: ubuntu-22.04
    env:
      VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build project
        working-directory: ./apps/web-app
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-app-dist
          path: ./apps/web-app/dist/
          if-no-files-found: error

  build-access-server:
    name: Build access-server
    runs-on: ubuntu-22.04
    environment: Production

    steps:
      - name: test env
        run: echo "toJSON(${{ secrets.AUTH_JWT_SECRET }})"
      - name: test env
        run: echo "toJSON(${{ secrets.FHDJH }})"

      - name: Set env variables
        run: |
          echo ${{ secrets.AUTH_JWT_SECRET }} >> $GITHUB_ENV
          echo ${{ secrets.MONGO_URI }} >> $GITHUB_ENV
          echo ${{ secrets.NODE_ENV }} >> $GITHUB_ENV
          echo ${{ secrets.STORAGE_ACCESS_KEY }} >> $GITHUB_ENV
          echo ${{ secrets.STORAGE_SECRET_KEY }} >> $GITHUB_ENV

      - name: Get code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build project
        working-directory: ./apps/access-server
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: access-server-dist
          path: ./apps/access-server/dist/
          if-no-files-found: error

  deploy-web-app:
    needs: build-web-app

    name: Deploy web-app
    runs-on: ubuntu-22.04

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-app-dist
          path: ./dist

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'delegate to the next step'
      - name: Add known hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/web-app

  deploy-access-server:
    needs: build-access-server

    name: Deploy access-server
    runs-on: ubuntu-22.04

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: access-server-dist
          path: ./dist

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'delegate to the next step'
      - name: Add known hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/access-server

      - name: Restart server
        run: ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 restart diut-production"
