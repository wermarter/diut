name: diut_monitoring

services:
  # tempo:
  #   restart: unless-stopped
  #   image: grafana/tempo:2.1.1
  #   command: ['-config.file=/etc/tempo/config.yml']
  #   volumes:
  #     - ./configs/tempo/config.yml:/etc/tempo/config.yml
  #     - tempo_volume:/tmp/tempo
  #   expose:
  #     - 4318 # OTLP HTTP receiver
  #     - 3100 # Data query port
  #   networks:
  #     - network

  loki:
    restart: unless-stopped
    image: grafana/loki:2.8.3
    command: -config.file=/etc/loki/config.yml
    expose:
      - 3100
    # environment:
    #   - JAEGER_AGENT_HOST=tempo
    #   - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
    #   - JAEGER_SAMPLER_TYPE=const
    #   - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./configs/loki/config.yml:/etc/loki/config.yml
      - loki_volume:/loki
    networks:
      - network

  # promtail:
  #   restart: unless-stopped
  #   image: grafana/promtail:2.8.3
  #   volumes:
  #     - ./configs/promtail/config.yml:/etc/promtail/docker-config.yaml
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: -config.file=/etc/promtail/docker-config.yaml
  #   depends_on:
  #     - loki
  #   ports:
  #     - '9080:9080'
  #   networks:
  #     - network

  prometheus:
    restart: unless-stopped
    image: prom/prometheus:v2.45.0
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus/config.yml
    volumes:
      - ./configs/prometheus/config.yml:/etc/prometheus/config.yml
    expose:
      - 9090
    ports:
      - '9090:9090'
    networks:
      - network

  grafana:
    restart: unless-stopped
    image: grafana/grafana:10.0.2
    volumes:
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./configs/grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./configs/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
      # - tempo
      - loki
      # - promtail
    networks:
      - network

volumes:
  # tempo_volume:
  loki_volume:

networks:
  network:
